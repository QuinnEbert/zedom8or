/*
 * File: z8remote/view/initView.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Z8Remote.view.initView', {
    extend: 'Ext.Panel',
    alias: 'widget.initView',

    config: {
        ui: 'dark',
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                title: 'Z Remote'
            },
            {
                xtype: 'container',
                centered: true,
                id: 'welcomer',
                itemId: 'welcomer',
                width: 200,
                items: [
                    {
                        xtype: 'label',
                        centered: false,
                        html: 'Z Remote',
                        id: 'welcomeA',
                        itemId: 'welcomeA',
                        style: 'text-align: center;'
                    },
                    {
                        xtype: 'label',
                        centered: false,
                        html: 'You need to configure Z8 Remote to connect to a Zedom8or PHP server setup.',
                        id: 'welcomeB',
                        itemId: 'welcomeB',
                        padding: '6pt 0px 6pt 0px',
                        style: 'text-align: center; font-size: 10pt; color: #888;'
                    },
                    {
                        xtype: 'label',
                        centered: false,
                        html: 'If you have already configured this and see this screen, it is an indication your server is unreachable, please make sure you are connected and try saving the setting again.',
                        id: 'welcomeC',
                        itemId: 'welcomeC',
                        padding: '0px 0px 6pt 0px',
                        style: 'text-align: center; font-size: 8pt; color: #A88; font-style: italic;'
                    },
                    {
                        xtype: 'textfield',
                        id: 'myServer',
                        itemId: 'myServer',
                        style: 'border: 2px #000 solid;',
                        name: 'myServer',
                        required: true,
                        placeHolder: 'http://path.to/zedom8or/myMobile.php'
                    },
                    {
                        xtype: 'button',
                        id: 'saveConf',
                        itemId: 'saveConf',
                        margin: '6 0 0 0',
                        ui: 'action',
                        text: 'Continue'
                    }
                ]
            },
            {
                xtype: 'hiddenfield',
                id: 'areFresh',
                itemId: 'areFresh',
                name: 'areFresh',
                value: 1
            }
        ],
        listeners: [
            {
                fn: 'onSaveConfTap',
                event: 'tap',
                delegate: '#saveConf'
            },
            {
                fn: 'onPanelShow',
                event: 'show'
            }
        ]
    },

    onSaveConfTap: function(button, e, eOpts) {
        console.log('Z8: configuration commit requested...');
        var z = Ext.getStore('confData');
        var x = 0;
        var y = (z.getCount()-1);
        var w = z.getCount();
        console.log('    ');
        console.log('    Check config:');
        console.log('      '+w.toString()+' local storage items');
        if ( w < 1 ) {
            Ext.getStore('confData').add({key:'server',value:Ext.getCmp('myServer').getValue()});
            Ext.getStore('confData').sync();
        } else {
            Ext.getStore('confData').remove(Ext.getStore('confData').getRange());
            Ext.getStore('confData').sync();
        }
        console.log('    ');

    },

    onPanelShow: function(component, eOpts) {
        console.log('Z8: initView is showing...');
        var z = Ext.getStore('confData');
        var x = 0;
        var y = (z.getCount()-1);
        var w = z.getCount();
        if (Ext.getCmp('areFresh').getValue()=='1') {
            console.log('  ');
            console.log('  Fresh start-up of app >>>');
            console.log('    ');
            console.log('    Check config:');
            console.log('      '+w.toString()+' local storage items');
            if ( w < 1 ) {
                // Do nothing!
            } else {
                Ext.Viewport.setActiveItem('mainView');
            }
            Ext.getCmp('areFresh').setValue('2');
        } else {
            console.log('  ');
            console.log('  Showing as configuration interface >>>');
            console.log('    ');
            console.log('    Check config:');
            console.log('      '+w.toString()+' local storage items');
            if ( w < 1 ) {
                // Do nothing!
            } else {
                Ext.getCmp('myServer').setValue(Ext.getStore('confData').getAt(0).get('value'));
            }
        }
        console.log('    ');

    }

});